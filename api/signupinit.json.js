var e=require("codegradx");const t=["./secrets/","/run/secrets/"],n="fkeyPublic";function o(e=n){return function(e,n){let o;if(process.env[n.toUpperCase()])o=process.env[n.toUpperCase()],o=o.replace(/@/g,"\n");else{const e=require("fs");try{for(const r of t){const t=`${r}/${n}`;if(e.existsSync(t)){o=e.readFileSync(t);break}}}catch(e){throw e}}if(!o)throw new Error(`Missing key ${n}`);try{return e({key:o,format:"pem"})}catch(e){throw e}}(require("crypto").createPublicKey,e)}const r=require("node-fetch");module.exports=function(e,t=5e3){return async function(n,o,r){try{return new Promise(((r,s)=>{setTimeout((()=>s("timeout")),t),r(e(n,o))}))}catch(e){return{statusCode:500,headers:{},body:o.body+e.toString()}}}}((async function(t,n,s){const i=new e.CodeGradX.State;i.servers=i.defaultservers,i.fetch=r,i.sendAXServer("x",{path:"/movecaptchainfo",method:"GET",headers:{Accept:"application/json"}}).then((t=>{if("JSON"!==t.entityKind)throw"bad answer";const r=t.entity.nonce,s=t.entity.wanted,i=e.CodeGradX._str2Date(t.entity.expires).toUTCString(),c=t.entity.images,a=function(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1)),o=e[n];e[n]=e[t],e[t]=o}return e}(c.map((e=>`/api/digit.js?slug=${e}`)));let u=`${r},${s.join("")},${c.join(",")}`;u=function(e){const t=require("crypto");let n=[];const r=o();function s(e){let o=t.publicEncrypt(r,Buffer.from(e));o=o.toString("base64"),o=encodeURIComponent(o),n.push(o)}for(;e.length>0;)s(e.slice(0,80)),e=e.slice(80);return n.join(",")}(u);let p=`MV=${u}; path=/api; expires=${i};`;n.setHeader("Set-Cookie",p),n.setHeader("Content-Type","application/json"),n.end(JSON.stringify({nonce:r,wanted:s,urls:a,expires:i}))})).catch((e=>{console.log("signupinit PB",i.log),console.log("signupinit PB",e);let t=`Problem\nexception: ${e.toString()}\nstate.log is\n${i.log.items.join("\n")}\n`;n.statusCode=500,n.statusMessage="Erroneous movecaptchainfo",n.setHeader("Content-Type","text/plain"),n.end(t)}))}));
